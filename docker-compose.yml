services:
  test:
    build:
      context: .
      dockerfile: Dockerfile
    image: offers-sdk-test
    environment:
      - OFFERS_API_REFRESH_TOKEN=${OFFERS_API_REFRESH_TOKEN:-test-token}
      - OFFERS_API_BASE_URL=${OFFERS_API_BASE_URL:-https://python.exercise.applifting.cz}
    volumes:
      - ./tests:/app/tests:ro
      - ./src:/app/src:ro
    command: poetry run pytest tests/ -v
    profiles:
      - test

  demo:
    build:
      context: .
      dockerfile: Dockerfile
    image: offers-sdk-demo
    environment:
      - OFFERS_API_REFRESH_TOKEN=${OFFERS_API_REFRESH_TOKEN:-demo-token}
      - OFFERS_API_BASE_URL=${OFFERS_API_BASE_URL:-https://python.exercise.applifting.cz}
    command: >
      poetry run python -c "
      import asyncio
      from offers_sdk import OffersClient, OffersAPISettings
      async def demo():
          print('Offers SDK Demo')
          print('=' * 50)
          settings = OffersAPISettings(refresh_token='demo-token', base_url='https://python.exercise.applifting.cz')
          client = OffersClient(settings)
          print('SDK initialized successfully')
          print(f'SDK Version: {client.__class__.__module__}')
          print(f'Transport: {client.transport.__class__.__name__}')
          print(f'Auth Manager: {client.auth_manager.__class__.__name__}')
          print('\nSDK is ready for use!')
          await client.aclose()
      asyncio.run(demo())"
    profiles:
      - demo

  production:
    build:
      context: .
      dockerfile: Dockerfile
    image: offers-sdk-prod
    environment:
      - OFFERS_API_REFRESH_TOKEN=${OFFERS_API_REFRESH_TOKEN}
      - OFFERS_API_BASE_URL=${OFFERS_API_BASE_URL:-https://python.exercise.applifting.cz}
    command: >
      poetry run python -c "
      import asyncio
      import os
      from offers_sdk import OffersClient, OffersAPISettings
      async def main():
          refresh_token = os.getenv('OFFERS_API_REFRESH_TOKEN', 'demo-token')
          base_url = os.getenv('OFFERS_API_BASE_URL', 'https://python.exercise.applifting.cz')
          settings = OffersAPISettings(refresh_token=refresh_token, base_url=base_url)
          client = OffersClient(settings)
          print(f'Offers SDK initialized')
          print(f'Base URL: {base_url}')
          print(f'Transport: {client.transport.__class__.__name__}')
          await client.aclose()
          print('Client closed successfully')
      asyncio.run(main())"
    profiles:
      - production

  dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    image: offers-sdk-dev
    environment:
      - OFFERS_API_REFRESH_TOKEN=${OFFERS_API_REFRESH_TOKEN:-dev-token}
      - OFFERS_API_BASE_URL=${OFFERS_API_BASE_URL:-https://python.exercise.applifting.cz}
      - PYTHONPATH=/app/src
    volumes:
      - .:/app
      - /app/.venv
    working_dir: /app
    command: poetry run python -c "from offers_sdk import OffersClient, OffersAPISettings; print('Development environment ready!')"
    profiles:
      - dev

  cli:
    build:
      context: .
      dockerfile: Dockerfile
    image: offers-sdk-cli
    environment:
      - OFFERS_API_REFRESH_TOKEN=${OFFERS_API_REFRESH_TOKEN:-cli-token}
      - OFFERS_API_BASE_URL=${OFFERS_API_BASE_URL:-https://python.exercise.applifting.cz}
    volumes:
      - .:/app
    working_dir: /app
    command: poetry run offers-cli --help
    profiles:
      - cli

  dev-test:
    build:
      context: .
      dockerfile: Dockerfile.dev
    image: offers-sdk-dev-test
    environment:
      - OFFERS_API_REFRESH_TOKEN=${OFFERS_API_REFRESH_TOKEN:-dev-test-token}
      - OFFERS_API_BASE_URL=${OFFERS_API_BASE_URL:-https://python.exercise.applifting.cz}
      - PYTHONPATH=/app/src
    volumes:
      - .:/app
    working_dir: /app
    command: poetry run pytest tests/ -v
    profiles:
      - dev-test

  dev-shell:
    build:
      context: .
      dockerfile: Dockerfile.dev
    image: offers-sdk-dev-shell
    environment:
      - OFFERS_API_REFRESH_TOKEN=${OFFERS_API_REFRESH_TOKEN:-dev-shell-token}
      - OFFERS_API_BASE_URL=${OFFERS_API_BASE_URL:-https://python.exercise.applifting.cz}
      - PYTHONPATH=/app/src
    volumes:
      - .:/app
    working_dir: /app
    stdin_open: true
    tty: true
    command: poetry run python
    profiles:
      - dev-shell